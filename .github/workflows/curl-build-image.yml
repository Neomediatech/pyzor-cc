# questo workflow viene chiamato via curl con questa chiamata:
# curl -X POST \
#  -H "Accept: application/vnd.github+json" \
#  -H "Authorization: Bearer __github_api_key__" \
#  https://api.github.com/repos/Neomediatech/gh-workflows/dispatches \
#  -d '{
#    "event_type": "build-image",
#    "client_payload": {
#      "var_1": "valore di esempio",
#      "var_2": "altro valore"
#    }
#  }'

name: Build Docker Images via curl

on:
  repository_dispatch: # Per inviare richieste di compilazione immagini via curl
    types: [build-image] # ascolta eventi chiamati 'build-image'
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  actions: write

jobs:
  build-image:
    uses: Neomediatech/gh-workflows/.github/workflows/check-and-build-docker-images.yml@main
    with:
      base-image: ghcr.io/neomediatech/ubuntu-base
      package-name: neomediatech/exim
      derived-image-prefix: ghcr.io/neomediatech/exim
      versions: '["4.97"]'
      type: '["."]'
      update-image: "true"
      package-to-check: "exim4-daemon-heavy"
      derived-image-repo: "Neomediatech/exim"
      derived-image-repo-ref: "master"
      #force-build: "true"
    secrets:
      NOTIFY_CMD: ${{ secrets.NOTIFY_CMD }}
      NOTIFY_UP: ${{ secrets.NOTIFY_UP }}
      NOTIFY_ENDPOINT: ${{ secrets.NOTIFY_ENDPOINT }}
      NOTIFY_OPTIONS: ${{ secrets.NOTIFY_OPTIONS }}
      GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
      API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
